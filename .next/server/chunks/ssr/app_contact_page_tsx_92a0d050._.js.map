{"version":3,"sources":["turbopack:///[project]/app/contact/page.tsx"],"sourcesContent":["'use client'\nimport { useLanguage } from '@/components/LanguageProvider'\nimport { useState } from 'react'\n\nexport default function ContactPage() {\n  const { language } = useLanguage()\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: '',\n  })\n  const [submitStatus, setSubmitStatus] = useState<'idle' | 'success' | 'error'>('idle')\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const t = {\n    de: {\n      title: 'Kontakt',\n      subtitle: 'Schreib mir gerne eine Nachricht oder ruf mich an.',\n      nameLabel: 'Dein Name',\n      namePlaceholder: 'Max Mustermann',\n      emailLabel: 'E-Mail',\n      emailPlaceholder: 'max@beispiel.de',\n      messageLabel: 'Deine Nachricht',\n      messagePlaceholder: 'Schreib mir, was auf dem Herzen liegt...',\n      phoneLabel: 'Telefon',\n      phone: '0049 159 04891419',\n      submitButton: 'Nachricht senden',\n      submitting: 'Wird gesendet...',\n      successMessage: 'Danke! Ich melde mich schnell zurück.',\n      errorMessage: 'Da hat was nicht geklappt. Versuch es nochmal oder ruf mich an.',\n      requiredField: 'Pflichtfelder',\n    },\n    en: {\n      title: 'Contact',\n      subtitle: 'Feel free to send me a message or give me a call.',\n      nameLabel: 'Your name',\n      namePlaceholder: 'John Doe',\n      emailLabel: 'Email',\n      emailPlaceholder: 'john@example.com',\n      messageLabel: 'Your message',\n      messagePlaceholder: 'Tell me what\\'s on your mind...',\n      phoneLabel: 'Phone',\n      phone: '0049 159 04891419',\n      submitButton: 'Send message',\n      submitting: 'Sending...',\n      successMessage: 'Thanks! I\\'ll get back to you quickly.',\n      errorMessage: 'Something went wrong. Try again or give me a call.',\n      requiredField: 'Required fields',\n    },\n  }[language]\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setIsSubmitting(true)\n    setSubmitStatus('idle')\n\n    try {\n      const response = await fetch('/api/contact', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: formData.name,\n          email: formData.email,\n          message: formData.message,\n          contactType: 'general',\n        }),\n      })\n\n      const data = await response.json()\n\n      if (!response.ok || !data.success) {\n        throw new Error(data.message || 'Failed to send message')\n      }\n\n      setSubmitStatus('success')\n      setFormData({\n        name: '',\n        email: '',\n        message: '',\n      })\n    } catch (error) {\n      console.error('Form submission error:', error)\n      setSubmitStatus('error')\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  return (\n    <div className=\"min-h-screen bg-black text-white py-32 px-6\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"mb-16 text-center\">\n          <h1 className=\"text-4xl md:text-6xl font-bold text-white mb-6\">\n            {t.title}\n          </h1>\n          <p className=\"text-xl text-zinc-400\">\n            {t.subtitle}\n          </p>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 gap-12\">\n          {/* Contact Info */}\n          <div className=\"space-y-8\">\n            <div>\n              <h2 className=\"text-2xl font-bold text-white mb-6\">\n                {t.phoneLabel}\n              </h2>\n              <a\n                href={`tel:${t.phone.replace(/\\s/g, '')}`}\n                className=\"text-xl text-zinc-300 hover:text-white transition-colors inline-block\"\n              >\n                {t.phone}\n              </a>\n            </div>\n\n            <div>\n              <h2 className=\"text-2xl font-bold text-white mb-6\">\n                {t.emailLabel}\n              </h2>\n              <a\n                href=\"mailto:chris.hermann9397@gmail.com\"\n                className=\"text-xl text-zinc-300 hover:text-white transition-colors inline-block\"\n              >\n                chris.hermann9397@gmail.com\n              </a>\n            </div>\n          </div>\n\n          {/* Contact Form */}\n          <div>\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              {/* Name */}\n              <div>\n                <label htmlFor=\"name\" className=\"block text-sm font-medium text-zinc-400 mb-2\">\n                  {t.nameLabel} *\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleChange}\n                  placeholder={t.namePlaceholder}\n                  required\n                  className=\"w-full px-4 py-3 bg-zinc-900 border border-zinc-800 rounded-lg text-white placeholder-zinc-600 focus:outline-none focus:ring-2 focus:ring-white focus:border-transparent transition-all\"\n                />\n              </div>\n\n              {/* Email */}\n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-zinc-400 mb-2\">\n                  {t.emailLabel} *\n                </label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  placeholder={t.emailPlaceholder}\n                  required\n                  className=\"w-full px-4 py-3 bg-zinc-900 border border-zinc-800 rounded-lg text-white placeholder-zinc-600 focus:outline-none focus:ring-2 focus:ring-white focus:border-transparent transition-all\"\n                />\n              </div>\n\n              {/* Message */}\n              <div>\n                <label htmlFor=\"message\" className=\"block text-sm font-medium text-zinc-400 mb-2\">\n                  {t.messageLabel} *\n                </label>\n                <textarea\n                  id=\"message\"\n                  name=\"message\"\n                  value={formData.message}\n                  onChange={handleChange}\n                  placeholder={t.messagePlaceholder}\n                  rows={6}\n                  required\n                  className=\"w-full px-4 py-3 bg-zinc-900 border border-zinc-800 rounded-lg text-white placeholder-zinc-600 focus:outline-none focus:ring-2 focus:ring-white focus:border-transparent transition-all resize-none\"\n                />\n              </div>\n\n              {/* Submit Button */}\n              <button\n                type=\"submit\"\n                disabled={isSubmitting || !formData.name || !formData.email || !formData.message}\n                className=\"w-full px-8 py-4 bg-white text-black rounded-full font-medium hover:bg-zinc-200 transition-all duration-300 flex items-center justify-center gap-2 group disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {isSubmitting ? t.submitting : t.submitButton}\n                <span className=\"group-hover:translate-x-1 transition-transform\">→</span>\n              </button>\n\n              {/* Success Message */}\n              {submitStatus === 'success' && (\n                <div className=\"mt-6 p-4 bg-green-900/20 border border-green-700/50 rounded-lg\">\n                  <p className=\"text-green-400 text-center font-medium\">\n                    ✓ {t.successMessage}\n                  </p>\n                </div>\n              )}\n\n              {/* Error Message */}\n              {submitStatus === 'error' && (\n                <div className=\"mt-6 p-4 bg-red-900/20 border border-red-700/50 rounded-lg\">\n                  <p className=\"text-red-400 text-center\">\n                    {t.errorMessage}\n                  </p>\n                </div>\n              )}\n            </form>\n\n            {/* Required Field Helper Text */}\n            <p className=\"text-sm text-zinc-500 text-center mt-6\">\n              * {t.requiredField}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}